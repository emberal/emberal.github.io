{"version":3,"file":"component---src-pages-projects-mdx-fields-slug-tsx-content-file-path-home-martin-git-javascript-martials-website-projects-truth-tables-index-mdx-0fc8ce3151383203f40f.js","mappings":"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","sources":["webpack://martials-website/./projects/truth-tables/index.mdx","webpack://martials-website/./src/pages/projects/{mdx.fields__slug}.tsx","webpack://martials-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {A} from \"../../src/components/link\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Noen sannhetsverdier kan bli ganske store, og kompliserte. Derfor har jeg laget dette programmet for å forenkle uttrykk mest mulig.\\nProgrammet bruker flere kjente metoder for å skrive om uttrykkene. Hvilke uttrykk som er brukt og hvilke endringer de gjorde,\\nkan vises i menyen under søkefeltet.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"I tillegg til å bare forenkle uttrykk, kan man også generere en sannhetstabell med alle mulige verdier i uttrykket.\\nHvis man ikke ønsker å forenkle uttrykket, men bare generere tabellen, kan man enkelt skru av forenkling. I tillegg har\\nman muligheten til å filtrere resultat, enten ved å skjule sanne eller usanne verdier. Eller ved å sortere etter sanne\\neller usanne først.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"Nettsiden er laget med TypeScript, SolidJS og Tailwind CSS. API-et er laget med Java og Spring Boot.\\nBegge kjører på min egen raspberry pi 4, nettsiden er hostet på en apache2 tjener, mens API-et ligger på en tomcat tjener.\\n\", React.createElement(A, {\n    to: \"https://martials.no/simplify-truths.html\"\n  }, \"Lenke til nettsiden.\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"Spørringer kan gjøres mot API-et kan utføres med GET eller POST. API-et returnerer JSON.\\n\", React.createElement(A, {\n    to: \"https://api.martials.no/simplify-truths\"\n  }, \"Lenke til API-docs\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/martin/git/Javascript/martials-website/projects/truth-tables/index.mdx\";\nimport * as React from \"react\";\nimport Layout from \"../../components/layout\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport {TagsRow} from \"../../components/tags\";\nimport {splitCSV} from \"../../utils/util\";\nimport Seo from \"../../components/seo\";\nimport {A} from \"../../components/link\";\nconst ProjectPost = _ref => {\n  var _frontmatter$hero_ima, _frontmatter$hero_ima2, _frontmatter$title, _frontmatter$tags, _frontmatter$source;\n  let {data: {mdx: {frontmatter}}, children} = _ref;\n  const heroImageData = frontmatter === null || frontmatter === void 0 ? void 0 : (_frontmatter$hero_ima = frontmatter.hero_image) === null || _frontmatter$hero_ima === void 0 ? void 0 : (_frontmatter$hero_ima2 = _frontmatter$hero_ima.childImageSharp) === null || _frontmatter$hero_ima2 === void 0 ? void 0 : _frontmatter$hero_ima2.gatsbyImageData;\n  const heroImage = heroImageData ? getImage(heroImageData) : undefined;\n  return React.createElement(Layout, {\n    title: (_frontmatter$title = frontmatter === null || frontmatter === void 0 ? void 0 : frontmatter.title) !== null && _frontmatter$title !== void 0 ? _frontmatter$title : \"Blogpost\",\n    headline: frontmatter === null || frontmatter === void 0 ? void 0 : frontmatter.title,\n    description: frontmatter !== null && frontmatter !== void 0 && frontmatter.description ? frontmatter.description : \"A blogpost by Martin Berg Alstad\"\n  }, React.createElement(\"article\", null, React.createElement(\"div\", {\n    className: \"max-h-[40rem] flex justify-center\"\n  }, heroImage && (frontmatter === null || frontmatter === void 0 ? void 0 : frontmatter.hero_image_alt) && React.createElement(GatsbyImage, {\n    imgStyle: {\n      objectFit: \"contain\"\n    },\n    alt: frontmatter.hero_image_alt,\n    image: heroImage\n  })), React.createElement(\"div\", {\n    className: \"my-2\"\n  }, React.createElement(TagsRow, {\n    tags: splitCSV((_frontmatter$tags = frontmatter === null || frontmatter === void 0 ? void 0 : frontmatter.tags) !== null && _frontmatter$tags !== void 0 ? _frontmatter$tags : \"\")\n  })), React.createElement(\"p\", null, frontmatter === null || frontmatter === void 0 ? void 0 : frontmatter.description), React.createElement(\"p\", null, \"Kildekoden p\\xE5\", \" \", React.createElement(A, {\n    to: (_frontmatter$source = frontmatter === null || frontmatter === void 0 ? void 0 : frontmatter.source) !== null && _frontmatter$source !== void 0 ? _frontmatter$source : undefined\n  }, \"GitHub\")), React.createElement(\"div\", null, React.createElement(\"br\", null), children)));\n};\nProjectPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  var _mdx$frontmatter, _mdx$frontmatter2;\n  let {data: {mdx}} = _ref2;\n  return React.createElement(Seo, {\n    title: mdx === null || mdx === void 0 ? void 0 : (_mdx$frontmatter = mdx.frontmatter) === null || _mdx$frontmatter === void 0 ? void 0 : _mdx$frontmatter.title,\n    description: mdx === null || mdx === void 0 ? void 0 : (_mdx$frontmatter2 = mdx.frontmatter) === null || _mdx$frontmatter2 === void 0 ? void 0 : _mdx$frontmatter2.description\n  });\n};\nconst query = \"2638837736\";\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","A","to","wrapper","MDXLayout","ProjectPost","_ref","_frontmatter$hero_ima","_frontmatter$hero_ima2","_frontmatter$title","_frontmatter$tags","_frontmatter$source","data","mdx","frontmatter","children","heroImageData","hero_image","childImageSharp","gatsbyImageData","heroImage","getImage","undefined","Layout","title","headline","description","className","hero_image_alt","GatsbyImage","imgStyle","objectFit","alt","image","TagsRow","tags","splitCSV","source","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_mdx$frontmatter","_mdx$frontmatter2","Seo","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}