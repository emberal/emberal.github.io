{"version":3,"file":"component---src-pages-projects-mdx-slug-tsx-83f8ada50dd7eab5d915.js","mappings":"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","sources":["webpack://martials-website/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://martials-website/./node_modules/@babel/runtime/helpers/construct.js","webpack://martials-website/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://martials-website/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://martials-website/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://martials-website/./node_modules/react-feather/dist/icons/github.js","webpack://martials-website/./node_modules/gatsby-plugin-mdx/index.js","webpack://martials-website/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://martials-website/./src/components/tag.tsx","webpack://martials-website/./src/pages/projects/index.tsx","webpack://martials-website/./src/pages/projects/{mdx.slug}.tsx"],"sourcesContent":["var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar GitHub = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"\n  }));\n});\nGitHub.displayName = 'GitHub';\nexport default GitHub;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import * as React from \"react\";\n\ninterface Tag {\n    name?: string,\n    value?: number,\n    className?: string,\n    onClick?: React.MouseEventHandler<HTMLButtonElement>,\n}\n\nconst Tag = ({ name, value, className, onClick }: Tag) => {\n    return (\n        <button\n            className={ `${ onClick !== undefined ? \"cursor-pointer\" : \"cursor-auto\" } ${ className } border rounded-xl border-slate-300` }\n            onClick={ onClick }>\n            <span className={ \"mx-2 w-max\" }>{ name + (value !== undefined ? `(${ value })` : \"\") }</span>\n        </button>\n    )\n}\n\nexport default Tag;\n","import * as React from \"react\";\nimport Layout, { Links } from \"../../components/layout\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport { GitHub } from \"react-feather\";\nimport { GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\nimport Tag from \"../../components/tag\";\n\n/**\n * Takes a String in a csv format, separated by \";\" and returns an array of strings\n * @param csv A String representation of a csv file\n */\nexport const splitCSV = (csv: string) => csv.split(\";\");\n\n/**\n * Contains cards of all projects with some information, and links to the posts\n * @param data A query containing data from the posts\n * @returns {JSX.Element}\n * @constructor\n */\nconst ProjectPage = ({ data: { allMdx } }: PageProps<Queries.ProjectPageQuery>): JSX.Element => {\n\n    const { t } = useTranslation();\n    let image: IGatsbyImageData | undefined;\n\n    // TODO have a button to hide / show tags, hidden by default\n    // TODO update tags when one is selected, so it will only show the relevant ones\n    const tagMap: any[] = [];\n    let objectIndex = 0;\n    for (let nodeIndex = 0; nodeIndex < allMdx.nodes.length; nodeIndex++) {\n        const tagArray = splitCSV(allMdx.nodes[nodeIndex].frontmatter?.tags ?? \"\");\n\n        if (tagArray !== undefined) {\n            for (let i = 0; i < tagArray.length; i++) {\n\n                let found = false;\n                for (let j = 0; j < tagMap.length; j++) {\n                    if (tagArray[i] === tagMap[j].key) {\n                        tagMap[j].value += 1;\n                        found = true;\n                    }\n                }\n                if (!found) {\n                    tagMap[objectIndex] = {\n                        key: tagArray[i],\n                        value: 1,\n                    };\n                    objectIndex++;\n                }\n            }\n        }\n    }\n    tagMap.sort(function (a: any, b: any) {\n        return b.value - a.value\n    });\n\n    const [selectedTag, setSelectedTag] = React.useState(\"\");\n\n    /**\n     * Updates the state of the current selected tag to a new one. If the new one is the same as the old, reset.\n     * @param key The key for the new tag\n     */\n    function updateTagState(key: string) {\n        if (selectedTag === key) {\n            setSelectedTag(\"\");\n        }\n        else {\n            setSelectedTag(key);\n        }\n    }\n\n    return (\n        <Layout\n            title={ t(\"projects\") }\n            headline={ t(\"myProjects\") }\n            description={ t(\"projectsByMe\") }\n            current={ Links.projects }>\n            <div>\n                <div className={ \"flex flex-wrap gap-1 mb-5\" }>\n                    {\n                        tagMap.map((tag: any) =>\n                            <div key={ tag.key }>\n                                <Tag name={ tag.key }\n                                     value={ tag.value }\n                                     onClick={ () => updateTagState(tag.key) }\n                                     className={ `hover:border-primaryPurple\n                                     ${ selectedTag === tag.key ? \"border-primaryPurple\" : \"\" }` }/>\n                            </div>)\n                    }\n                </div>\n                {\n                    allMdx.nodes.map((node: any) => (\n                        <div key={ node.id }>\n                            {\n                                selectedTag === \"\" || node.frontmatter?.tags.includes(selectedTag) ?\n\n                                    <article className={ \"border-2 rounded-xl mb-10 shadow\" }>\n                                        <div className={\"mx-2 mb-2\"}>\n                                            <div className={ \"flex items-center my-3\" }>\n                                                <Link\n                                                    className={ \"text-primaryPurple dark:text-primaryPink hover:underline\" }\n                                                    to={ node.slug }>\n                                                    <h2 className={ \"text-xl\" }>{ node.frontmatter?.title }</h2>\n                                                </Link>\n                                                <a title={ t(\"openInGitHub\") } href={ node.frontmatter?.source }\n                                                   target={ \"_blank\" } rel={ \"noreferrer\" }><GitHub/>\n                                                </a>\n                                            </div>\n                                            <div className={ \"grid grid-flow-col justify-between mb-2\" }>\n                                                <p>\n                                                    { t(\"timeToRead\") } { node.timeToRead } { (node.timeToRead === 1) ?\n                                                    t(\"minute\") : t(\"minutes\") }\n                                                </p>\n                                            </div>\n                                            <div className={ \"flex flex-row flex-wrap gap-1\" }>\n                                                {\n                                                    splitCSV(node.frontmatter.tags).map(tag =>\n                                                        <div key={ tag }>\n                                                            <Tag name={ tag }/>\n                                                        </div>)\n                                                }\n                                            </div>\n                                        </div>\n\n                                        { (() => { // Used to initiate the variable image in order to null check it\n                                            image = getImage(node.frontmatter?.hero_image.childImageSharp.gatsbyImageData)\n                                            return true;\n                                        })() }\n                                        { image ?\n                                            <GatsbyImage alt={ node.frontmatter?.hero_image_alt }\n                                                         image={ image }/> : null }\n                                        <div className={ \"mx-2 my-4\" }>\n                                            <p>{ node.frontmatter?.description }</p>\n                                        </div>\n                                    </article>\n                                    : null\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query ProjectPage ($language: String!) {\n        locales: allLocale(filter: {language: {eq: $language}}) {\n            edges {\n                node {\n                    ns\n                    data\n                    language\n                }\n            }\n        }\n        allMdx(sort: {fields: frontmatter___uploaded, order: DESC}) {\n            nodes {\n                frontmatter {\n                    title\n                    description\n                    tags\n                    source\n                    hero_image_alt\n                    hero_image {\n                        childImageSharp {\n                            gatsbyImageData\n                        }\n                    }\n                    uploaded\n                }\n                id\n                slug\n                timeToRead\n            }\n        }\n    }\n`;\n\nexport default ProjectPage;\n","import * as React from \"react\";\nimport Layout, { Links } from \"../../components/layout\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { GatsbyImage, getImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\nimport { splitCSV } from \"./index\";\nimport Tag from \"../../components/tag\";\n\n/**\n * A single post containing all the data from an mdx file\n * @param data A query containing all the data from a single post\n * @returns {JSX.Element}\n * @constructor\n */\nconst ProjectPost = ({ data: { mdx } }: PageProps<Queries.ProjectPostQuery>) => {\n\n    let heroImage: IGatsbyImageData | undefined, heroImageAlt: string | null | undefined,\n        description: string | null | undefined, title: string | undefined, source: string | null | undefined,\n        heroImageData: ImageDataLike | undefined, tags: string | null | undefined;\n\n    if (mdx !== null) {\n        heroImageData = mdx.frontmatter?.hero_image?.childImageSharp?.gatsbyImageData;\n        heroImage = typeof heroImageData !== 'undefined' ? getImage(heroImageData as ImageDataLike) : undefined;\n        heroImageAlt = mdx.frontmatter?.hero_image_alt;\n        title = mdx.frontmatter?.title;\n        description = mdx.frontmatter?.description;\n        source = mdx.frontmatter?.source;\n        tags = mdx.frontmatter?.tags;\n    }\n\n    return (\n        <>\n            <Layout\n                title={ typeof title === 'string' ? title : \"Blogpost\" }\n                headline={ title }\n                description={ typeof description === 'string' ? description : \"A blogpost by Martin Berg Alstad\" }\n                current={ Links.projects }>\n                <article>\n                    { heroImage && typeof heroImageAlt === 'string' ?\n                        <GatsbyImage alt={ heroImageAlt } image={ heroImage }/> : null }\n                    <div className={ \"flex flex-row flex-wrap gap-1 my-2\" }>\n                        {\n                            splitCSV(tags ?? \"\").map((tag: string) =>\n                                <div key={ tag }>\n                                    <Tag name={ tag }/>\n                                </div>)\n                        }\n                    </div>\n\n                    <p>{ description }</p>\n                    <p>\n                        Kildekoden på{ \" \" }\n                        <a className={ \"text-primaryPurple dark:text-primaryPink hover:underline\" }\n                           href={ typeof source === 'string' || typeof source === 'undefined' ? source : undefined }\n                           target={ \"_blank\" } rel={ \"noreferrer\" }>GitHub</a>\n                    </p>\n                    <div className={ \"mt-2\" }>\n                        <MDXRenderer>{ mdx !== null ? mdx.body : \"Something went wrong! mdx=\" + mdx }</MDXRenderer>\n                    </div>\n                </article>\n            </Layout>\n        </>\n    );\n}\n\nexport const query = graphql`\n    query ProjectPost($id: String, $language: String!) {\n        locales: allLocale(filter: {language: {eq: $language}}) {\n            edges {\n                node {\n                    ns\n                    data\n                    language\n                }\n            }\n        }\n        mdx(id: {eq: $id}) {\n            frontmatter {\n                hero_image {\n                    childImageSharp {\n                        gatsbyImageData\n                    }\n                }\n                title\n                description\n                source\n                hero_image_alt\n                uploaded\n                tags\n            }\n            timeToRead\n            body\n\n        }\n    }\n`;\n\nexport default ProjectPost;\n"],"names":["arrayLikeToArray","module","exports","arr","Array","isArray","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","bind","a","push","apply","instance","Function","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_extends","Object","assign","target","i","length","source","key","hasOwnProperty","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","GitHub","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayName","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","values","map","fn","createElement","name","value","className","onClick","undefined","splitCSV","csv","split","image","allMdx","data","t","useTranslation","tagMap","objectIndex","nodeIndex","nodes","tagArray","frontmatter","_allMdx$nodes$nodeInd2","tags","found","j","sort","b","selectedTag","setSelectedTag","Layout","title","headline","description","current","Links","tag","Tag","node","id","_node$frontmatter","includes","Link","to","slug","_node$frontmatter2","href","_node$frontmatter3","rel","timeToRead","getImage","_node$frontmatter4","hero_image","childImageSharp","gatsbyImageData","GatsbyImage","alt","_node$frontmatter5","hero_image_alt","_node$frontmatter6","heroImage","heroImageAlt","heroImageData","_mdx$frontmatter","_mdx$frontmatter$hero","_mdx$frontmatter$hero2","_mdx$frontmatter2","_mdx$frontmatter3","_mdx$frontmatter4","_mdx$frontmatter5","_mdx$frontmatter6","body"],"sourceRoot":""}