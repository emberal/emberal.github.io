{"version":3,"file":"component---src-pages-projects-index-js-737c2bbb50e4f3268108.js","mappings":"wMAAA,SAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,GAGFH,EAASY,MAAMC,KAAMR,WAG9B,SAASS,EAAyBP,EAAQQ,GACxC,GAAc,MAAVR,EAAgB,MAAO,GAE3B,IAEIC,EAAKJ,EAFLD,EAkBN,SAAuCI,EAAQQ,GAC7C,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTa,EAAaf,OAAOgB,KAAKV,GAG7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EA9BMgB,CAA8BZ,EAAQQ,GAInD,GAAId,OAAOmB,sBAAuB,CAChC,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAEpD,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IACvCI,EAAMa,EAAiBjB,GACnBW,EAASG,QAAQV,IAAQ,GACxBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KACxDL,EAAOK,GAAOD,EAAOC,IAIzB,OAAOL,EAmBT,IAAIoB,GAAS,IAAAC,aAAW,SAAUC,EAAMC,GACtC,IAAIC,EAAaF,EAAKG,MAClBA,OAAuB,IAAfD,EAAwB,eAAiBA,EACjDE,EAAYJ,EAAKK,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAOjB,EAAyBW,EAAM,CAAC,QAAS,SAEpD,OAAoB,gBAAoB,MAAOzB,EAAS,CACtD0B,IAAKA,EACLM,MAAO,6BACPC,MAAOH,EACPI,OAAQJ,EACRK,QAAS,YACTC,KAAM,OACNC,OAAQT,EACRU,YAAa,IACbC,cAAe,QACfC,eAAgB,SACfT,GAAoB,gBAAoB,OAAQ,CACjDU,EAAG,4SAGPlB,EAAOmB,YAAc,SACrB,Q,wCCrEMC,EAAc,CAChBC,OAAQ,aACRC,aAAc,OACdC,aAAc,QAEZC,EAAiB,CACnBC,WAAY,MACZf,MAAO,eAELgB,EAAe,CACjBC,QAAS,OACTC,WAAY,SACZC,UAAW,QAETC,EAAc,CAChBH,QAAS,OACTI,WAAY,YACZC,aAAc,SACdC,eAAgB,iBAmFpB,EA1Ec,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAELC,GAAKC,EAAAA,EAAAA,kBAALD,EAEP,OACI,gBAACE,EAAA,EAAD,CACIC,MAAOH,EAAE,YACTI,SAAUJ,EAAE,cACZK,SACI,uBAAKC,MAAO,CAACC,cAAe,UAEpBR,EAAKS,OAAOC,MAAMC,KAAI,SAAAC,GAAI,OACtB,2BAASL,MAAOrB,EAAanC,IAAK6D,EAAKC,IACnC,uBAAKN,MAAOf,GACR,gBAAC,EAAAsB,KAAD,CAAMC,UAAWC,EAAAA,GAAWC,GAAIL,EAAKM,MACjC,sBAAIX,MAAOjB,GAAiBsB,EAAKO,YAAYf,QAEjD,qBAAGA,MAAOH,EAAE,gBAAiBc,UAAWK,EAAAA,GAAYC,KAAMT,EAAKO,YAAYrE,OACxEJ,OAAQ,SAAU4E,IAAK,cAAc,gBAAC,EAAD,QAG5C,uBAAKf,MAAOX,GACR,qBAAGW,MAAOjB,GACLW,EAAE,cAAeW,EAAKW,WAD3B,IAC6D,IAApBX,EAAKW,WAAoBtB,EAAE,UAAYA,EAAE,YAElF,qBAAGM,MAAO,CAACiB,YAAa,QAAxB,SAAuCZ,EAAKO,YAAYM,OAE5D,gBAAC,EAAAC,EAAD,CACIC,IAAKf,EAAKO,YAAYS,eACtBC,OAAOC,EAAAA,EAAAA,GAASlB,EAAKO,YAAYY,WAAWC,gBAAgBC,mBAChE,uBAAK1B,MAAOjB,GACR,yBAAIsB,EAAKO,YAAYe","sources":["webpack://martials-website/./node_modules/react-feather/dist/icons/github.js","webpack://martials-website/./src/pages/projects/index.js"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar GitHub = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"\n  }));\n});\nGitHub.displayName = 'GitHub';\nexport default GitHub;","import * as React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport {graphql, Link} from \"gatsby\";\nimport {GitHub} from \"react-feather\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport {githubIcon} from \"../../stylesheets/media.module.css\";\nimport {linkStyle} from \"../../stylesheets/text.module.css\";\nimport {useTranslation} from \"gatsby-plugin-react-i18next\";\n\nconst projectCard = {\n    border: \"solid grey\",\n    borderRadius: \"10px\",\n    marginBottom: \"25px\",\n}\nconst marginLeftSide = {\n    marginLeft: \"5px\",\n    width: \"fit-content\",\n}\nconst projectTitle = {\n    display: \"flex\",\n    alignItems: \"center\",\n    maxHeight: \"60px\"\n}\nconst projectData = {\n    display: \"grid\",\n    gridColumn: \"auto auto\",\n    gridAutoFlow: \"column\",\n    justifyContent: \"space-between\",\n}\n\n/**\n * Contains cards of all projects with some information, and links to the posts\n * @param data A query containing data from the posts\n * @returns {JSX.Element}\n * @constructor\n */\nconst Index = ({data}) => {\n\n    const {t} = useTranslation();\n\n    return (\n        <Layout\n            title={t(\"projects\")}\n            headline={t(\"myProjects\")}\n            children={\n                <div style={{paddingBottom: \"120px\"}}>\n                    {\n                        data.allMdx.nodes.map(node => (\n                            <article style={projectCard} key={node.id}>\n                                <div style={projectTitle}>\n                                    <Link className={linkStyle} to={node.slug}>\n                                        <h2 style={marginLeftSide}>{node.frontmatter.title}</h2>\n                                    </Link>\n                                    <a title={t(\"openInGitHub\")} className={githubIcon} href={node.frontmatter.source}\n                                       target={\"_blank\"} rel={\"noreferrer\"}><GitHub/>\n                                    </a>\n                                </div>\n                                <div style={projectData}>\n                                    <p style={marginLeftSide}>\n                                        {t(\"timeToRead\")}{node.timeToRead} {(node.timeToRead === 1) ? t(\"minute\") : t(\"minutes\")}\n                                    </p>\n                                    <p style={{marginRight: \"5px\"}}>Type: {node.frontmatter.type}</p>\n                                </div>\n                                <GatsbyImage\n                                    alt={node.frontmatter.hero_image_alt}\n                                    image={getImage(node.frontmatter.hero_image.childImageSharp.gatsbyImageData)}/>\n                                <div style={marginLeftSide}>\n                                    <p>{node.frontmatter.description}</p>\n                                </div>\n                            </article>\n                        ))\n                    }\n                </div>\n            }/>\n    );\n}\n\nexport const query = graphql `\n    query($language: String!) {\n        locales: allLocale(filter: {language: {eq: $language}}) {\n            edges {\n                node {\n                    ns\n                    data\n                    language\n                }\n            }\n        }\n        allMdx {\n            nodes {\n                frontmatter {\n                    title\n                    description\n                    type\n                    source\n                    hero_image_alt\n                    hero_image {\n                        childImageSharp {\n                            gatsbyImageData\n                        }\n                    }\n                }\n                id\n                slug\n                timeToRead\n            }\n        }\n    }\n`\n\nexport default Index\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","GitHub","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayName","projectCard","border","borderRadius","marginBottom","marginLeftSide","marginLeft","projectTitle","display","alignItems","maxHeight","projectData","gridColumn","gridAutoFlow","justifyContent","data","t","useTranslation","Layout","title","headline","children","style","paddingBottom","allMdx","nodes","map","node","id","Link","className","linkStyle","to","slug","frontmatter","githubIcon","href","rel","timeToRead","marginRight","type","G","alt","hero_image_alt","image","getImage","hero_image","childImageSharp","gatsbyImageData","description"],"sourceRoot":""}