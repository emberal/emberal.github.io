{"version":3,"file":"component---src-pages-404-tsx-cfbe52225068935eca05.js","mappings":"yNA2BA,UAfgCA,KAAM,IAAAC,EAElC,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,kBAEd,OACIC,EAAAA,cAACC,EAAAA,EAAM,CAACC,MAAyB,QAApBL,EAAGC,EAAE,uBAAe,IAAAD,EAAAA,OAAIM,EAAYC,YAAc,8BAC3DJ,EAAAA,cAAA,SAAG,IAAGF,EAAE,SAAW,IAAK,IAACE,EAAAA,cAAA,QAAMK,KAAK,MAAM,aAAW,iBAAgB,MAC/D,IAAMP,EAAE,mBACVE,EAAAA,cAAA,WAAMA,EAAAA,cAAA,WACNA,EAAAA,cAACM,EAAAA,EAAM,CAACC,GAAG,KAAMT,EAAE,SAAkB,KAEpC,EAMV,MAAMU,EAAwDC,IAAc,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAb,KAAEC,GAAMN,EAC1E,MAAMO,EAAUD,SAAa,QAATL,EAAJK,EAAMC,eAAO,IAAAN,GAAU,QAAVC,EAAbD,EAAeO,MAAM,UAAE,IAAAN,GAAM,QAANC,EAAvBD,EAAyBO,YAAI,IAAAN,OAAzB,EAAJA,EAA+BG,KAC/C,IAAII,EAIJ,OAHIH,IACAG,EAAMC,KAAKC,MAAML,IAEdhB,EAAAA,cAACsB,EAAAA,EAAG,CAACpB,MAAyB,QAApBW,EAAM,QAANC,EAAGK,SAAG,IAAAL,OAAA,EAAHA,EAAKS,oBAAY,IAAAV,EAAAA,EAAI,sBAAwBW,eAAgB,GAAS,C","sources":["webpack://martials-website/./src/pages/404.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql, type HeadProps } from \"gatsby\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\nimport Seo from \"../components/seo\";\nimport { MyLink } from \"../components/link\";\n\n/**\n * The page that is shown when a page does not exist\n * @returns {JSX.Element}\n * @constructor\n */\nconst NotFoundPage: Component = () => {\n\n    const { t } = useTranslation();\n\n    return (\n        <Layout title={ t(\"pageNotFound\") ?? undefined } description={ \"Error 404. Page not found!\" }>\n            <p> { t(\"sorry\") + \" \" } <span role=\"img\" aria-label=\"Pensive emoji\">ðŸ˜”</span>\n                { \" \" + t(\"pageWasNotFound\") }\n                <br /><br />\n                <MyLink to=\"/\">{ t(\"home\") }</MyLink>.\n            </p>\n        </Layout>\n    );\n};\n\nexport default NotFoundPage;\n\nexport const Head: Component<HeadProps<Queries.NotFoundPageQuery>> = ({ data }) => {\n    const locales = data?.locales?.edges[0]?.node?.data;\n    let obj = undefined;\n    if (locales) {\n        obj = JSON.parse(locales);\n    }\n    return <Seo title={ obj?.pageNotFound ?? \"404: Page not found\" } blockCrawlers={ true } />;\n};\n\nexport const query = graphql`\n    query NotFoundPage($language: String!) {\n        locales: allLocale(filter: {language: {eq: $language}}) {\n            edges {\n                node {\n                    ns\n                    data\n                    language\n                }\n            }\n        }\n    }\n`;\n"],"names":["NotFoundPage","_t","t","useTranslation","React","Layout","title","undefined","description","role","MyLink","to","Head","_ref","_data$locales","_data$locales$edges$","_data$locales$edges$$","_obj$pageNotFound","_obj","data","locales","edges","node","obj","JSON","parse","Seo","pageNotFound","blockCrawlers"],"sourceRoot":""}