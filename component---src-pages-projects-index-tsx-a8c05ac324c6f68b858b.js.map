{"version":3,"file":"component---src-pages-projects-index-tsx-a8c05ac324c6f68b858b.js","mappings":"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","sources":["webpack://martials-website/./node_modules/react-feather/dist/icons/github.js","webpack://martials-website/./src/pages/projects/index.tsx"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar GitHub = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"\n  }));\n});\nGitHub.displayName = 'GitHub';\nexport default GitHub;","import * as React from \"react\";\nimport Layout, { Links } from \"../../components/layout\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport { GitHub } from \"react-feather\";\nimport { GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\n\n/**\n * Contains cards of all projects with some information, and links to the posts\n * @param data A query containing data from the posts\n * @returns {JSX.Element}\n * @constructor\n */\nconst Index = ({ data: { allMdx } }: PageProps<Queries.AboutMePageQuery>) => {\n\n    const { t } = useTranslation();\n    let image: IGatsbyImageData | undefined;\n\n    return (\n        <Layout\n            title={ t(\"projects\") }\n            headline={ t(\"myProjects\") }\n            description={ t(\"projectsByMe\") }\n            current={ Links.projects }>\n            <div className={ \"pb-20\" }>\n                {\n                    allMdx.nodes.map((node: any) => (\n                        <article className={ \"border-2 rounded-xl mb-10\" } key={ node.id }>\n                            <div className={ \"flex items-center my-3\" }>\n                                <Link className={ \"text-primaryPurple dark:text-primaryPink hover:underline\" }\n                                      to={ node.slug }>\n                                    <h2 className={ \"mx-2 text-xl\" }>{ node.frontmatter?.title }</h2>\n                                </Link>\n                                <a title={ t(\"openInGitHub\") } href={ node.frontmatter?.source }\n                                   target={ \"_blank\" } rel={ \"noreferrer\" }><GitHub/>\n                                </a>\n                            </div>\n                            <div className={ \"grid grid-flow-col justify-between mx-2 mb-2\" }>\n                                <p>\n                                    { t(\"timeToRead\") } { node.timeToRead } { (node.timeToRead === 1) ?\n                                    t(\"minute\") : t(\"minutes\") }\n                                </p>\n                                <p>Type: { node.frontmatter?.type }</p>\n                            </div>\n                            { (() => { // Used to initiate the variable image in order to null check it\n                                image = getImage(node.frontmatter?.hero_image.childImageSharp.gatsbyImageData)\n                                return true;\n                            })() }\n                            { image ? <GatsbyImage alt={ node.frontmatter?.hero_image_alt } image={ image }/> : null }\n                            <div className={ \"mx-2 my-4\" }>\n                                <p>{ node.frontmatter?.description }</p>\n                            </div>\n                        </article>\n                    ))\n                }\n            </div>\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query AboutMePage ($language: String!) {\n        locales: allLocale(filter: {language: {eq: $language}}) {\n            edges {\n                node {\n                    ns\n                    data\n                    language\n                }\n            }\n        }\n        allMdx(sort: {fields: frontmatter___uploaded, order: DESC}) {\n            nodes {\n                frontmatter {\n                    title\n                    description\n                    type\n                    source\n                    hero_image_alt\n                    hero_image {\n                        childImageSharp {\n                            gatsbyImageData\n                        }\n                    }\n                    uploaded\n                }\n                id\n                slug\n                timeToRead\n            }\n        }\n    }\n`;\n\nexport default Index;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","GitHub","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayName","image","allMdx","data","t","useTranslation","React","Layout","title","headline","description","current","Links","className","nodes","map","node","id","Link","to","slug","frontmatter","_node$frontmatter","href","_node$frontmatter2","rel","timeToRead","_node$frontmatter3","type","getImage","_node$frontmatter4","hero_image","childImageSharp","gatsbyImageData","GatsbyImage","alt","_node$frontmatter5","hero_image_alt","_node$frontmatter6"],"sourceRoot":""}