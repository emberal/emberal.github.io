{"version":3,"file":"component---src-pages-404-tsx-fbb893f3de589f780fae.js","mappings":"sPAYe,SAASA,IAA4B,MAEhD,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,kBAEd,OACIC,EAAAA,cAACC,EAAAA,EAAM,CAACC,MAAyB,QAApB,EAAGJ,EAAE,uBAAe,aAAIK,EAAYC,YAAc,8BAC3DJ,EAAAA,cAAAA,IAAAA,KAAAA,IAAMF,EAAE,SAAW,IAAG,IAAGE,EAAAA,cAAAA,OAAAA,CAAMK,KAAK,MAAM,aAAW,iBAAe,MAC9D,IAAMP,EAAE,mBACVE,EAAAA,cAAAA,KAAAA,MAAK,2BACLA,EAAAA,cAACM,EAAAA,EAAM,CAACC,GAAG,KAAMT,EAAE,SAAkB,KAIrD,CAEO,SAASU,EAAK,GAA6D,kBAA7D,KAAEC,GAA4C,EAC/D,MAAMC,EAAUD,SAAa,QAAT,EAAJA,EAAMC,eAAO,OAAU,QAAV,EAAbC,EAAeC,MAAM,UAAE,OAAM,QAAN,EAAvBC,EAAyBC,YAAI,WAAzB,EAAJC,EAA+BN,KAC/C,IAAIO,EAIJ,OAHIN,IACAM,EAAMC,KAAKC,MAAMR,IAEdV,EAAAA,cAACmB,EAAAA,EAAG,CAACjB,MAAyB,QAApB,EAAM,QAAN,EAAGc,SAAG,aAAHI,EAAKC,oBAAY,QAAI,sBAAwBC,eAAgB,GACrF,C","sources":["webpack://martials-website/./src/pages/404.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql, type HeadProps } from \"gatsby\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\nimport SEO from \"../components/seo\";\nimport { MyLink } from \"../components/link\";\n\n/**\n * The page that is shown when a page does not exist\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function NotFoundPage(): JSX.Element {\n\n    const { t } = useTranslation();\n\n    return (\n        <Layout title={ t(\"pageNotFound\") ?? undefined } description={ \"Error 404. Page not found!\" }>\n            <p> { t(\"sorry\") + \" \" } <span role=\"img\" aria-label=\"Pensive emoji\">ðŸ˜”</span>\n                { \" \" + t(\"pageWasNotFound\") }\n                <br/><br/>\n                <MyLink to=\"/\">{ t(\"home\") }</MyLink>.\n            </p>\n        </Layout>\n    );\n}\n\nexport function Head({ data }: HeadProps<Queries.NotFoundPageQuery>): JSX.Element {\n    const locales = data?.locales?.edges[0]?.node?.data;\n    let obj = undefined;\n    if (locales) {\n        obj = JSON.parse(locales);\n    }\n    return <SEO title={ obj?.pageNotFound ?? \"404: Page not found\" } blockCrawlers={ true }/>;\n}\n\nexport const query = graphql`\n    query NotFoundPage($language: String!) {\n        locales: allLocale(filter: {language: {eq: $language}}) {\n            edges {\n                node {\n                    ns\n                    data\n                    language\n                }\n            }\n        }\n    }\n`;\n"],"names":["NotFoundPage","t","useTranslation","React","Layout","title","undefined","description","role","MyLink","to","Head","data","locales","_data$locales","edges","_data$locales$edges$","node","_data$locales$edges$$","obj","JSON","parse","SEO","_obj","pageNotFound","blockCrawlers"],"sourceRoot":""}