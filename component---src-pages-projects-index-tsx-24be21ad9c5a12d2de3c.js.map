{"version":3,"file":"component---src-pages-projects-index-tsx-24be21ad9c5a12d2de3c.js","mappings":"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","sources":["webpack://martials-website/./node_modules/react-feather/dist/icons/github.js","webpack://martials-website/./src/components/tag.tsx","webpack://martials-website/./src/pages/projects/index.tsx"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar GitHub = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"\n  }));\n});\nGitHub.displayName = 'GitHub';\nexport default GitHub;","import * as React from \"react\";\n\ninterface Tag {\n    name?: string,\n    value?: number,\n    hoverTitle?: string,\n    className?: string,\n    onClick?: React.MouseEventHandler<HTMLButtonElement>,\n}\n\nconst Tag = ({ name, value, hoverTitle, className, onClick }: Tag) => {\n\n    return (\n        <button title={ hoverTitle }\n                className={ `${ onClick !== undefined ? \"cursor-pointer\" : \"cursor-auto\" } ${ className } border rounded-xl\n             border-gray-500` }\n                onClick={ onClick }>\n            <span className={ \"mx-2 w-max\" }>{ name + (value !== undefined ? `(${ value })` : \"\") }</span>\n        </button>\n    )\n}\n\nexport default Tag;\n","import * as React from \"react\";\nimport Layout, { Links } from \"../../components/layout\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport { GitHub } from \"react-feather\";\nimport { GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\nimport Tag from \"../../components/tag\";\n\n/**\n * Takes a String in a csv format, separated by \";\" and returns an array of strings\n * @param csv A String representation of a csv file\n */\nexport const splitCSV = (csv: string) => csv.split(\";\");\n\n/**\n * Contains cards of all projects with some information, and links to the posts\n * @param data A query containing data from the posts\n * @returns {JSX.Element}\n * @constructor\n */\nconst ProjectPage = ({ data: { allMdx } }: PageProps<Queries.ProjectPageQuery>): JSX.Element => {\n\n    const { t } = useTranslation();\n    let image: IGatsbyImageData | undefined;\n\n    const allProjectTags = allMdx.nodes.map(node => node.frontmatter?.tags);\n    const [tags, setTags] = React.useState(allProjectTags);\n\n    // TODO the option to select multiple tags to improve search, use string[] in useState\n    const tagMap: any[] = [];\n    let objectIndex = 0;\n    for (const tag of tags) {\n        const tagArray = splitCSV(tag ?? \"\");\n\n        if (tagArray !== undefined) {\n            for (const tagInArray of tagArray) {\n\n                let found = false;\n                for (const tagInMap of tagMap) {\n                    if (tagInArray.toLowerCase() === tagInMap.key.toLowerCase()) {\n                        tagInMap.value += 1;\n                        found = true;\n                    }\n                }\n                if (!found) {\n                    tagMap[objectIndex] = {\n                        key: tagInArray,\n                        value: 1,\n                    };\n                    objectIndex++;\n                }\n            }\n        }\n    }\n    tagMap.sort((a: any, b: any) => b.value - a.value);\n    const [selectedTag, setSelectedTag] = React.useState(\"\");\n\n    const [hideTags, setHideTags] = React.useState(true);\n\n    const [hideTagsText, setHideTagsText] = React.useState(t(\"showMore\"));\n\n    /**\n     * Updates the state of the current selected tag to a new one. If the new one is the same as the old, reset.\n     * @param key The key for the new tag\n     */\n    function updateTagState(key: string) {\n        if (selectedTag === key) {\n            setSelectedTag(\"\");\n            setTags(allProjectTags);\n        }\n        else {\n            setSelectedTag(key);\n            let tags = allMdx.nodes.map(node => node.frontmatter?.tags?.includes(key) ? node.frontmatter?.tags : null);\n            tags = tags.filter((element) => element !== null);\n            setTags(tags);\n        }\n    }\n\n    /**\n     * Update the tags and tagsText states, to the opposite one\n     */\n    function toggleTags() {\n        setHideTags(!hideTags);\n        setHideTagsText(!hideTags ? t(\"showMore\") : t(\"showLess\"));\n    }\n\n    return (\n        <Layout\n            title={ t(\"projects\") }\n            headline={ t(\"myProjects\") }\n            description={ t(\"projectsByMe\") }\n            current={ Links.projects }>\n            <div>\n                <div className={ `flex ${ hideTags ? \"overflow-scroll pb-3 mr-[6.65rem]\" : \"flex-wrap mb-2\" } gap-1` }>\n                    {\n                        tagMap.map((tag: any) =>\n                            <div key={ tag.key }>\n                                <Tag name={ tag.key }\n                                     value={ tag.value }\n                                     onClick={ () => updateTagState(tag.key) }\n                                     className={ `hover:border-primaryPurple w-max\n                                     ${ selectedTag === tag.key ? \"!border-primaryPurple\" : \"\" }` }/>\n                            </div>)\n                    }\n                    {/*TODO scroll on PC by dragging the mouse*/ }\n                    <Tag name={ hideTagsText.toString() } onClick={ toggleTags }\n                         hoverTitle={ hideTags ? t(\"showMoreTags\") : t(\"showLessTags\") }\n                         className={ `hover:border-primaryPurple min-w-max \n                         ${ hideTags ? \"absolute bg-white dark:bg-gray-900 right-0\" : \"\" } shadow-sm shadow-primaryPurple` }/>\n                </div>\n                {\n                    allMdx.nodes.map((node: any) => (\n                        <div key={ node.id }>\n                            {\n                                selectedTag === \"\" || node.frontmatter?.tags.toLowerCase().includes(selectedTag.toLowerCase()) ?\n                                    <article className={ \"border-2 border-gray-500 rounded-xl mb-10 shadow\" }>\n                                        <div className={ \"mx-2 mb-2\" }>\n                                            <div className={ \"flex items-center my-3\" }>\n                                                <Link\n                                                    className={ \"text-primaryPurple dark:text-primaryPink hover:underline mr-2\" }\n                                                    to={ node.slug }>\n                                                    <h2 className={ \"text-xl\" }>{ node.frontmatter?.title }</h2>\n                                                </Link>\n                                                <a title={ t(\"openInGitHub\") } href={ node.frontmatter?.source }\n                                                   target={ \"_blank\" } rel={ \"noreferrer\" }><GitHub/>\n                                                </a>\n                                            </div>\n                                            <div className={ \"grid grid-flow-col justify-between mb-2\" }>\n                                                <p>\n                                                    { t(\"timeToRead\") } { node.timeToRead } { (node.timeToRead === 1) ?\n                                                    t(\"minute\") : t(\"minutes\") }\n                                                </p>\n                                            </div>\n                                            <div className={ \"flex flex-row flex-wrap gap-1\" }>\n                                                {\n                                                    splitCSV(node.frontmatter.tags).map(tag =>\n                                                        <div key={ tag }>\n                                                            <Tag name={ tag }/>\n                                                        </div>)\n                                                }\n                                            </div>\n                                        </div>\n\n                                        { (() => { // Used to initiate the variable image in order to null check it\n                                            image = getImage(node.frontmatter?.hero_image.childImageSharp.gatsbyImageData)\n                                            return true;\n                                        })() }\n                                        { image ?\n                                            <GatsbyImage alt={ node.frontmatter?.hero_image_alt }\n                                                         image={ image }/> : null }\n                                        <div className={ \"mx-2 my-4\" }>\n                                            <p>{ node.frontmatter?.description }</p>\n                                        </div>\n                                    </article>\n                                    : null\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query ProjectPage ($language: String!) {\n        locales: allLocale(filter: {language: {eq: $language}}) {\n            edges {\n                node {\n                    ns\n                    data\n                    language\n                }\n            }\n        }\n        allMdx(sort: {fields: frontmatter___uploaded, order: DESC}) {\n            nodes {\n                frontmatter {\n                    title\n                    description\n                    tags\n                    source\n                    hero_image_alt\n                    hero_image {\n                        childImageSharp {\n                            gatsbyImageData\n                        }\n                    }\n                    uploaded\n                }\n                id\n                slug\n                timeToRead\n            }\n        }\n    }\n`;\n\nexport default ProjectPage;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","GitHub","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayName","name","value","hoverTitle","className","onClick","React","title","undefined","splitCSV","csv","split","image","allMdx","data","t","useTranslation","allProjectTags","nodes","map","node","frontmatter","_node$frontmatter","tags","setTags","tagMap","objectIndex","tag","tagArray","tagInArray","found","tagInMap","toLowerCase","sort","a","b","selectedTag","setSelectedTag","hideTags","setHideTags","hideTagsText","setHideTagsText","Layout","headline","description","current","Links","Tag","includes","_node$frontmatter3","filter","element","updateTagState","toString","id","_node$frontmatter4","Link","to","slug","_node$frontmatter5","href","_node$frontmatter6","rel","timeToRead","getImage","_node$frontmatter7","hero_image","childImageSharp","gatsbyImageData","GatsbyImage","alt","_node$frontmatter8","hero_image_alt","_node$frontmatter9"],"sourceRoot":""}