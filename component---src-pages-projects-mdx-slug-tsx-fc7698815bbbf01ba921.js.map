{"version":3,"file":"component---src-pages-projects-mdx-slug-tsx-fc7698815bbbf01ba921.js","mappings":"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","sources":["webpack://martials-website/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://martials-website/./node_modules/@babel/runtime/helpers/construct.js","webpack://martials-website/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://martials-website/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://martials-website/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://martials-website/./node_modules/react-feather/dist/icons/github.js","webpack://martials-website/./node_modules/gatsby-plugin-mdx/index.js","webpack://martials-website/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://martials-website/./src/components/tag.tsx","webpack://martials-website/./src/pages/projects/index.tsx","webpack://martials-website/./src/pages/projects/{mdx.slug}.tsx"],"sourcesContent":["var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar GitHub = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"\n  }));\n});\nGitHub.displayName = 'GitHub';\nexport default GitHub;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import * as React from \"react\";\n\ninterface Tag {\n    name?: string,\n    value?: number,\n    hoverTitle?: string,\n    className?: string,\n    onClick?: React.MouseEventHandler<HTMLButtonElement>,\n}\n\nconst Tag = ({ name, value, hoverTitle, className, onClick }: Tag) => {\n\n    return (\n        <button title={ hoverTitle }\n                className={ `${ onClick !== undefined ? \"cursor-pointer\" : \"cursor-auto\" } ${ className } border rounded-xl\n             border-gray-500` }\n                onClick={ onClick }>\n            <span className={ \"mx-2 w-max\" }>{ name + (value !== undefined ? `(${ value })` : \"\") }</span>\n        </button>\n    )\n}\n\nexport default Tag;\n","import * as React from \"react\";\nimport Layout, { Links } from \"../../components/layout\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport { GitHub } from \"react-feather\";\nimport { GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\nimport Tag from \"../../components/tag\";\n\n/**\n * Takes a String in a csv format, separated by \";\" and returns an array of strings\n * @param csv A String representation of a csv file\n */\nexport const splitCSV = (csv: string) => csv.split(\";\");\n\n/**\n * Contains cards of all projects with some information, and links to the posts\n * @param data A query containing data from the posts\n * @returns {JSX.Element}\n * @constructor\n */\nconst ProjectPage = ({ data: { allMdx } }: PageProps<Queries.ProjectPageQuery>): JSX.Element => {\n\n    const { t } = useTranslation();\n    let image: IGatsbyImageData | undefined;\n\n    const allProjectTags = allMdx.nodes.map(node => node.frontmatter?.tags);\n    const [tags, setTags] = React.useState(allProjectTags);\n\n    // TODO the option to select multiple tags to improve search, use string[] in useState\n    const tagMap: any[] = [];\n    let objectIndex = 0;\n    for (const tag of tags) {\n        const tagArray = splitCSV(tag ?? \"\");\n\n        if (tagArray !== undefined) {\n            for (const tagInArray of tagArray) {\n\n                let found = false;\n                for (const tagInMap of tagMap) {\n                    if (tagInArray.toLowerCase() === tagInMap.key.toLowerCase()) {\n                        tagInMap.value += 1;\n                        found = true;\n                    }\n                }\n                if (!found) {\n                    tagMap[objectIndex] = {\n                        key: tagInArray,\n                        value: 1,\n                    };\n                    objectIndex++;\n                }\n            }\n        }\n    }\n    tagMap.sort((a: any, b: any) => b.value - a.value);\n    const [selectedTag, setSelectedTag] = React.useState(\"\");\n\n    const [hideTags, setHideTags] = React.useState(true);\n\n    const [hideTagsText, setHideTagsText] = React.useState(t(\"showMore\"));\n\n    /**\n     * Updates the state of the current selected tag to a new one. If the new one is the same as the old, reset.\n     * @param key The key for the new tag\n     */\n    function updateTagState(key: string) {\n        if (selectedTag === key) {\n            setSelectedTag(\"\");\n            setTags(allProjectTags);\n        }\n        else {\n            setSelectedTag(key);\n            let tags = allMdx.nodes.map(node => node.frontmatter?.tags?.includes(key) ? node.frontmatter?.tags : null);\n            tags = tags.filter((element) => element !== null);\n            setTags(tags);\n        }\n    }\n\n    /**\n     * Update the tags and tagsText states, to the opposite one\n     */\n    function toggleTags() {\n        setHideTags(!hideTags);\n        setHideTagsText(!hideTags ? t(\"showMore\") : t(\"showLess\"));\n    }\n\n    return (\n        <Layout\n            title={ t(\"projects\") }\n            headline={ t(\"myProjects\") }\n            description={ t(\"projectsByMe\") }\n            current={ Links.projects }>\n            <div>\n                <div className={ `flex ${ hideTags ? \"overflow-scroll pb-3 mr-[6.65rem]\" : \"flex-wrap mb-2\" } gap-1` }>\n                    {\n                        tagMap.map((tag: any) =>\n                            <div key={ tag.key }>\n                                <Tag name={ tag.key }\n                                     value={ tag.value }\n                                     onClick={ () => updateTagState(tag.key) }\n                                     className={ `hover:border-primaryPurple w-max\n                                     ${ selectedTag === tag.key ? \"!border-primaryPurple\" : \"\" }` }/>\n                            </div>)\n                    }\n                    {/*TODO scroll on PC by dragging the mouse*/ }\n                    <Tag name={ hideTagsText.toString() } onClick={ toggleTags }\n                         hoverTitle={ hideTags ? t(\"showMoreTags\") : t(\"showLessTags\") }\n                         className={ `hover:border-primaryPurple min-w-max \n                         ${ hideTags ? \"absolute bg-white dark:bg-gray-900 right-0\" : \"\" }` }/>\n                </div>\n                {\n                    allMdx.nodes.map((node: any) => (\n                        <div key={ node.id }>\n                            {\n                                selectedTag === \"\" || node.frontmatter?.tags.toLowerCase().includes(selectedTag.toLowerCase()) ?\n                                    <article className={ \"border-2 border-gray-500 rounded-xl mb-10 shadow\" }>\n                                        <div className={ \"mx-2 mb-2\" }>\n                                            <div className={ \"flex items-center my-3\" }>\n                                                <Link\n                                                    className={ \"text-primaryPurple dark:text-primaryPink hover:underline mr-2\" }\n                                                    to={ node.slug }>\n                                                    <h2 className={ \"text-xl\" }>{ node.frontmatter?.title }</h2>\n                                                </Link>\n                                                <a title={ t(\"openInGitHub\") } href={ node.frontmatter?.source }\n                                                   target={ \"_blank\" } rel={ \"noreferrer\" }><GitHub/>\n                                                </a>\n                                            </div>\n                                            <div className={ \"grid grid-flow-col justify-between mb-2\" }>\n                                                <p>\n                                                    { t(\"timeToRead\") } { node.timeToRead } { (node.timeToRead === 1) ?\n                                                    t(\"minute\") : t(\"minutes\") }\n                                                </p>\n                                            </div>\n                                            <div className={ \"flex flex-row flex-wrap gap-1\" }>\n                                                {\n                                                    splitCSV(node.frontmatter.tags).map(tag =>\n                                                        <div key={ tag }>\n                                                            <Tag name={ tag }/>\n                                                        </div>)\n                                                }\n                                            </div>\n                                        </div>\n\n                                        { (() => { // Used to initiate the variable image in order to null check it\n                                            image = getImage(node.frontmatter?.hero_image.childImageSharp.gatsbyImageData)\n                                            return true;\n                                        })() }\n                                        { image ?\n                                            <GatsbyImage alt={ node.frontmatter?.hero_image_alt }\n                                                         image={ image }/> : null }\n                                        <div className={ \"mx-2 my-4\" }>\n                                            <p>{ node.frontmatter?.description }</p>\n                                        </div>\n                                    </article>\n                                    : null\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query ProjectPage ($language: String!) {\n        locales: allLocale(filter: {language: {eq: $language}}) {\n            edges {\n                node {\n                    ns\n                    data\n                    language\n                }\n            }\n        }\n        allMdx(sort: {fields: frontmatter___uploaded, order: DESC}) {\n            nodes {\n                frontmatter {\n                    title\n                    description\n                    tags\n                    source\n                    hero_image_alt\n                    hero_image {\n                        childImageSharp {\n                            gatsbyImageData\n                        }\n                    }\n                    uploaded\n                }\n                id\n                slug\n                timeToRead\n            }\n        }\n    }\n`;\n\nexport default ProjectPage;\n","import * as React from \"react\";\nimport Layout, { Links } from \"../../components/layout\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { GatsbyImage, getImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\nimport { splitCSV } from \"./index\";\nimport Tag from \"../../components/tag\";\n\n/**\n * A single post containing all the data from an mdx file\n * @param data A query containing all the data from a single post\n * @returns {JSX.Element}\n * @constructor\n */\nconst ProjectPost = ({ data: { mdx } }: PageProps<Queries.ProjectPostQuery>) => {\n\n    let heroImage: IGatsbyImageData | undefined, heroImageAlt: string | null | undefined,\n        description: string | null | undefined, title: string | undefined, source: string | null | undefined,\n        heroImageData: ImageDataLike | undefined, tags: string | null | undefined;\n\n    if (mdx !== null) {\n        heroImageData = mdx.frontmatter?.hero_image?.childImageSharp?.gatsbyImageData;\n        heroImage = typeof heroImageData !== 'undefined' ? getImage(heroImageData as ImageDataLike) : undefined;\n        heroImageAlt = mdx.frontmatter?.hero_image_alt;\n        title = mdx.frontmatter?.title;\n        description = mdx.frontmatter?.description;\n        source = mdx.frontmatter?.source;\n        tags = mdx.frontmatter?.tags;\n    }\n\n    return (\n        <>\n            <Layout\n                title={ typeof title === 'string' ? title : \"Blogpost\" }\n                headline={ title }\n                description={ typeof description === 'string' ? description : \"A blogpost by Martin Berg Alstad\" }\n                current={ Links.projects }>\n                <article>\n                    { heroImage && typeof heroImageAlt === 'string' ?\n                        <GatsbyImage alt={ heroImageAlt } image={ heroImage }/> : null }\n                    <div className={ \"flex flex-row flex-wrap gap-1 my-2\" }>\n                        {\n                            splitCSV(tags ?? \"\").map((tag: string) =>\n                                <div key={ tag }>\n                                    <Tag name={ tag }/>\n                                </div>)\n                        }\n                    </div>\n\n                    <p>{ description }</p>\n                    <p>\n                        Kildekoden på{ \" \" }\n                        <a className={ \"text-primaryPurple dark:text-primaryPink hover:underline\" }\n                           href={ typeof source === 'string' || typeof source === 'undefined' ? source : undefined }\n                           target={ \"_blank\" } rel={ \"noreferrer\" }>GitHub</a>\n                    </p>\n                    <div className={ \"mt-2\" }>\n                        <MDXRenderer>{ mdx !== null ? mdx.body : \"Something went wrong! mdx=\" + mdx }</MDXRenderer>\n                    </div>\n                </article>\n            </Layout>\n        </>\n    );\n}\n\nexport const query = graphql`\n    query ProjectPost($id: String, $language: String!) {\n        locales: allLocale(filter: {language: {eq: $language}}) {\n            edges {\n                node {\n                    ns\n                    data\n                    language\n                }\n            }\n        }\n        mdx(id: {eq: $id}) {\n            frontmatter {\n                hero_image {\n                    childImageSharp {\n                        gatsbyImageData\n                    }\n                }\n                title\n                description\n                source\n                hero_image_alt\n                uploaded\n                tags\n            }\n            timeToRead\n            body\n\n        }\n    }\n`;\n\nexport default ProjectPost;\n"],"names":["arrayLikeToArray","module","exports","arr","Array","isArray","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","bind","a","push","apply","instance","Function","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_extends","Object","assign","target","i","length","source","key","hasOwnProperty","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","GitHub","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayName","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","values","map","fn","createElement","name","value","hoverTitle","className","onClick","title","undefined","splitCSV","csv","split","image","allMdx","data","t","useTranslation","allProjectTags","nodes","node","frontmatter","_node$frontmatter","tags","setTags","tagMap","objectIndex","tag","tagArray","tagInArray","found","tagInMap","toLowerCase","sort","b","selectedTag","setSelectedTag","hideTags","setHideTags","hideTagsText","setHideTagsText","Layout","headline","description","current","Links","Tag","includes","_node$frontmatter3","filter","element","updateTagState","toString","id","_node$frontmatter4","Link","to","slug","_node$frontmatter5","href","_node$frontmatter6","rel","timeToRead","getImage","_node$frontmatter7","hero_image","childImageSharp","gatsbyImageData","GatsbyImage","alt","_node$frontmatter8","hero_image_alt","_node$frontmatter9","heroImage","heroImageAlt","heroImageData","_mdx$frontmatter","_mdx$frontmatter$hero","_mdx$frontmatter$hero2","_mdx$frontmatter2","_mdx$frontmatter3","_mdx$frontmatter4","_mdx$frontmatter5","_mdx$frontmatter6","body"],"sourceRoot":""}